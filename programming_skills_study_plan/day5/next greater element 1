






Logic -----> use a stack + dictionary based solution



Explanation - https://leetcode.com/problems/next-greater-element-i/solutions/824654/python-3-94-64-faster-used-stack-and-dictionary-explanation-added/?envType=study-plan&id=programming-skills-i&orderBy=most_votes




class Solution(object):
    def nextGreaterElement(self, nums1, nums2):
        if not nums2:
		return None

        mapping = {}
        result = []
        stack = []
        stack.append(nums2[0])

        for i in range(1, len(nums2)):
            while stack and nums2[i] > stack[-1]:    
                mapping[stack[-1]] = nums2[i]      
                stack.pop()                            
            stack.append(nums2[i]) 

        for element in stack:                
            mapping[element] = -1

        for i in range(len(nums1)):
            result.append(mapping[nums1[i]])
	return result      
